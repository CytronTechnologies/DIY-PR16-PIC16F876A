

Microchip Technology PIC LITE Macro Assembler V1.21 build 54009 
                                                                                               Thu Jun 18 12:10:09 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	16F876A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     	;# 
    16  0001                     	;# 
    17  0002                     	;# 
    18  0003                     	;# 
    19  0004                     	;# 
    20  0005                     	;# 
    21  0006                     	;# 
    22  0007                     	;# 
    23  000A                     	;# 
    24  000B                     	;# 
    25  000C                     	;# 
    26  000D                     	;# 
    27  000E                     	;# 
    28  000E                     	;# 
    29  000F                     	;# 
    30  0010                     	;# 
    31  0011                     	;# 
    32  0012                     	;# 
    33  0013                     	;# 
    34  0014                     	;# 
    35  0015                     	;# 
    36  0015                     	;# 
    37  0016                     	;# 
    38  0017                     	;# 
    39  0018                     	;# 
    40  0019                     	;# 
    41  001A                     	;# 
    42  001B                     	;# 
    43  001B                     	;# 
    44  001C                     	;# 
    45  001D                     	;# 
    46  001E                     	;# 
    47  001F                     	;# 
    48  0081                     	;# 
    49  0085                     	;# 
    50  0086                     	;# 
    51  0087                     	;# 
    52  008C                     	;# 
    53  008D                     	;# 
    54  008E                     	;# 
    55  0091                     	;# 
    56  0092                     	;# 
    57  0093                     	;# 
    58  0094                     	;# 
    59  0098                     	;# 
    60  0099                     	;# 
    61  009C                     	;# 
    62  009D                     	;# 
    63  009E                     	;# 
    64  009F                     	;# 
    65  010C                     	;# 
    66  010D                     	;# 
    67  010E                     	;# 
    68  010F                     	;# 
    69  018C                     	;# 
    70  018D                     	;# 
    71                           
    72                           	psect	idataBANK0
    73  076D                     __pidataBANK0:	
    74                           
    75                           ;initializer for main@F986
    76  076D  347F               	retlw	127
    77  076E  340D               	retlw	13
    78  076F  34B7               	retlw	183
    79  0770  349F               	retlw	159
    80  0771  34CD               	retlw	205
    81  0772  34DB               	retlw	219
    82  0773  34FB               	retlw	251
    83  0774  340F               	retlw	15
    84  0775  34FF               	retlw	255
    85  0776  34DF               	retlw	223
    86  0777  34EF               	retlw	239
    87  0778  34F9               	retlw	249
    88  0779  3473               	retlw	115
    89  077A  34BD               	retlw	189
    90  077B  34F3               	retlw	243
    91  077C  34E3               	retlw	227
    92  0006                     _PORTB	set	6
    93  001A                     _RCREG	set	26
    94  00C4                     _CREN	set	196
    95  00C1                     _OERR	set	193
    96  0065                     _RCIF	set	101
    97  00C6                     _RX9	set	198
    98  00C7                     _SPEN	set	199
    99  0099                     _SPBRG	set	153
   100  0086                     _TRISB	set	134
   101  04C2                     _BRGH	set	1218
   102                           
   103                           ; #config settings
   104  0000                     
   105                           	psect	cinit
   106  07EF                     start_initialization:	
   107  07EF                     __initialization:	
   108                           
   109                           ; Clear objects allocated to COMMON
   110  07EF  01F9               	clrf	__pbssCOMMON& (0+127)
   111                           
   112                           ; Initialize objects allocated to BANK0
   113  07F0  1383               	bcf	3,7	;select IRP bank0
   114  07F1  3042               	movlw	low (__pdataBANK0+16)
   115  07F2  00FD               	movwf	btemp+-1
   116  07F3  3007               	movlw	high __pidataBANK0
   117  07F4  00FE               	movwf	btemp
   118  07F5  306D               	movlw	low __pidataBANK0
   119  07F6  00FF               	movwf	btemp+1
   120  07F7  3032               	movlw	low __pdataBANK0
   121  07F8  0084               	movwf	4
   122  07F9  120A  118A  2781   	fcall	init_ram0
   123  07FC                     end_of_initialization:	
   124                           ;End of C runtime variable initialization code
   125                           
   126  07FC                     __end_of__initialization:	
   127  07FC  0183               	clrf	3
   128  07FD  120A  118A  2FAD   	ljmp	_main	;jump to C main() function
   129                           
   130                           	psect	bssCOMMON
   131  0079                     __pbssCOMMON:	
   132  0079                     read_packet@counter:	
   133  0079                     	ds	1
   134                           
   135                           	psect	dataBANK0
   136  0032                     __pdataBANK0:	
   137  0032                     main@F986:	
   138  0032                     	ds	16
   139                           
   140                           	psect	inittext
   141  077D                     init_fetch0:	
   142                           ;	Called with low address in FSR and high address in W
   143                           
   144  077D  087E               	movf	126,w
   145  077E  008A               	movwf	10
   146  077F  087F               	movf	127,w
   147  0780  0082               	movwf	2
   148  0781                     init_ram0:	
   149                           ;Called with:
   150                           ;	high address of idata address in btemp 
   151                           ;	low address of idata address in btemp+1 
   152                           ;	low address of data in FSR
   153                           ;	high address + 1 of data in btemp-1
   154                           
   155  0781  277D  120A  118A   	fcall	init_fetch0
   156  0784  0080               	movwf	0
   157  0785  0A84               	incf	4,f
   158  0786  0804               	movf	4,w
   159  0787  067D               	xorwf	125,w
   160  0788  1903               	btfsc	3,2
   161  0789  3400               	retlw	0
   162  078A  0AFF               	incf	127,f
   163  078B  1903               	btfsc	3,2
   164  078C  0AFE               	incf	126,f
   165  078D  2F81               	goto	init_ram0
   166                           
   167                           	psect	cstackCOMMON
   168  0070                     __pcstackCOMMON:	
   169  0070                     ?_main:	
   170  0070                     ??_uart_rec:	
   171                           ; 0 bytes @ 0x0
   172                           
   173  0070                     ?_read_packet:	
   174                           ; 0 bytes @ 0x0
   175                           
   176  0070                     ?_uart_rec:	
   177                           ; 1 bytes @ 0x0
   178                           
   179                           
   180                           ; 1 bytes @ 0x0
   181  0070                     	ds	1
   182  0071                     uart_rec@rec_data:	
   183                           
   184                           ; 1 bytes @ 0x1
   185  0071                     	ds	1
   186  0072                     ??_read_packet:	
   187                           
   188                           ; 0 bytes @ 0x2
   189  0072                     	ds	1
   190  0073                     read_packet@checksum:	
   191                           
   192                           ; 1 bytes @ 0x3
   193  0073                     	ds	1
   194  0074                     read_packet@data:	
   195                           
   196                           ; 1 bytes @ 0x4
   197  0074                     	ds	1
   198  0075                     ??_main:	
   199                           
   200                           ; 0 bytes @ 0x5
   201  0075                     	ds	4
   202                           
   203                           	psect	cstackBANK0
   204  0020                     __pcstackBANK0:	
   205  0020                     main@_7seg:	
   206                           
   207                           ; 16 bytes @ 0x0
   208  0020                     	ds	16
   209  0030                     main@no:	
   210                           
   211                           ; 1 bytes @ 0x10
   212  0030                     	ds	1
   213  0031                     main@num:	
   214                           
   215                           ; 1 bytes @ 0x11
   216  0031                     	ds	1
   217                           
   218                           	psect	maintext
   219  07AD                     __pmaintext:	
   220 ;;
   221 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   222 ;;
   223 ;; *************** function _main *****************
   224 ;; Defined at:
   225 ;;		line 51 in file "../../Source file/RF_RX MPLABX/PR16RX.c"
   226 ;; Parameters:    Size  Location     Type
   227 ;;		None
   228 ;; Auto vars:     Size  Location     Type
   229 ;;  _7seg          16    0[BANK0 ] unsigned char [16]
   230 ;;  num             1   17[BANK0 ] unsigned char 
   231 ;;  no              1   16[BANK0 ] unsigned char 
   232 ;; Return value:  Size  Location     Type
   233 ;;		None               void
   234 ;; Registers used:
   235 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   236 ;; Tracked objects:
   237 ;;		On entry : 17F/0
   238 ;;		On exit  : 0/0
   239 ;;		Unchanged: 0/0
   240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   241 ;;      Params:         0       0       0       0       0
   242 ;;      Locals:         0      18       0       0       0
   243 ;;      Temps:          4       0       0       0       0
   244 ;;      Totals:         4      18       0       0       0
   245 ;;Total ram usage:       22 bytes
   246 ;; Hardware stack levels required when called:    2
   247 ;; This function calls:
   248 ;;		_read_packet
   249 ;; This function is called by:
   250 ;;		Startup code after reset
   251 ;; This function uses a non-reentrant model
   252 ;;
   253                           
   254                           
   255                           ;psect for function _main
   256  07AD                     _main:	
   257                           
   258                           ;PR16RX.c: 53: unsigned char num,no;
   259                           ;PR16RX.c: 55: unsigned char _7seg[16]={0b01111111,0b00001101,0b10110111,0b10011111,
   260                           ;PR16RX.c: 56: 0b11001101,0b11011011,0b11111011,0b00001111,
   261                           ;PR16RX.c: 57: 0b11111111,0b11011111,0b11101111,0b11111001,
   262                           ;PR16RX.c: 58: 0b01110011,0b10111101,0b11110011,0b11100011};
   263                           
   264                           ;incstack = 0
   265                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   266  07AD  3020               	movlw	main@_7seg& (0+255)
   267  07AE  0084               	movwf	4
   268  07AF  3032               	movlw	low main@F986
   269  07B0  00F5               	movwf	??_main
   270  07B1  0804               	movf	4,w
   271  07B2  00F6               	movwf	??_main+1
   272  07B3  3010               	movlw	16
   273  07B4  00F7               	movwf	??_main+2
   274  07B5                     u100:	
   275  07B5  0875               	movf	??_main,w
   276  07B6  0084               	movwf	4
   277  07B7  1383               	bcf	3,7	;select IRP bank0
   278  07B8  0800               	movf	0,w
   279  07B9  00F8               	movwf	??_main+3
   280  07BA  0AF5               	incf	??_main,f
   281  07BB  0876               	movf	??_main+1,w
   282  07BC  0084               	movwf	4
   283  07BD  0878               	movf	??_main+3,w
   284  07BE  0080               	movwf	0
   285  07BF  0AF6               	incf	??_main+1,f
   286  07C0  0BF7               	decfsz	??_main+2,f
   287  07C1  2FB5               	goto	u100
   288                           
   289                           ;PR16RX.c: 61: TRISB = 0b00000000;
   290  07C2  1683               	bsf	3,5	;RP0=1, select bank1
   291  07C3  1303               	bcf	3,6	;RP1=0, select bank1
   292  07C4  0186               	clrf	6	;volatile
   293                           
   294                           ;PR16RX.c: 64: BRGH = 0;
   295  07C5  1118               	bcf	24,2	;volatile
   296                           
   297                           ;PR16RX.c: 65: SPBRG = 255;
   298  07C6  30FF               	movlw	255
   299  07C7  0099               	movwf	25	;volatile
   300                           
   301                           ;PR16RX.c: 66: SPEN = 1;
   302  07C8  1283               	bcf	3,5	;RP0=0, select bank0
   303  07C9  1303               	bcf	3,6	;RP1=0, select bank0
   304  07CA  1798               	bsf	24,7	;volatile
   305                           
   306                           ;PR16RX.c: 67: RX9 = 0;
   307  07CB  1318               	bcf	24,6	;volatile
   308                           
   309                           ;PR16RX.c: 68: CREN = 1;
   310  07CC  1618               	bsf	24,4	;volatile
   311                           
   312                           ;PR16RX.c: 70: num=0;
   313  07CD  01B1               	clrf	main@num
   314                           
   315                           ;PR16RX.c: 71: PORTB=_7seg[num];
   316  07CE  0831               	movf	main@num,w
   317  07CF  3E20               	addlw	main@_7seg& (0+255)
   318  07D0  0084               	movwf	4
   319  07D1                     L1:	
   320  07D1  0800               	movf	0,w
   321  07D2  0086               	movwf	6	;volatile
   322                           
   323                           ;PR16RX.c: 74: {
   324                           ;PR16RX.c: 75: CREN=1;
   325                           
   326                           ;PR16RX.c: 73: while(1)
   327  07D3  1618               	bsf	24,4	;volatile
   328                           
   329                           ;PR16RX.c: 76: if(OERR==0) no=read_packet();
   330  07D4  1898               	btfsc	24,1	;volatile
   331  07D5  2FE1               	goto	l28
   332  07D6  120A  118A  278E   	fcall	_read_packet
      +       120A  118A         
   333  07DB  00F5               	movwf	??_main
   334  07DC  0875               	movf	??_main,w
   335  07DD  1283               	bcf	3,5	;RP0=0, select bank0
   336  07DE  1303               	bcf	3,6	;RP1=0, select bank0
   337  07DF  00B0               	movwf	main@no
   338  07E0  2FE2               	goto	l592
   339  07E1                     l28:	
   340                           
   341                           ;PR16RX.c: 77: else CREN=0;
   342  07E1  1218               	bcf	24,4	;volatile
   343  07E2                     l592:	
   344                           
   345                           ;PR16RX.c: 79: if(no <= 0x0f) num=no;
   346  07E2  3010               	movlw	16
   347  07E3  0230               	subwf	main@no,w
   348  07E4  1803               	skipnc
   349  07E5  2FEA               	goto	l596
   350  07E6  0830               	movf	main@no,w
   351  07E7  00F5               	movwf	??_main
   352  07E8  0875               	movf	??_main,w
   353  07E9  00B1               	movwf	main@num
   354  07EA                     l596:	
   355                           
   356                           ;PR16RX.c: 81: PORTB=_7seg[num];
   357  07EA  0831               	movf	main@num,w
   358  07EB  3E20               	addlw	main@_7seg& (0+255)
   359  07EC  0084               	movwf	4
   360  07ED  1383               	bcf	3,7	;select IRP bank0
   361  07EE  2FD1               	goto	L1
   362  07EF                     __end_of_main:	
   363                           
   364                           	psect	text1
   365  078E                     __ptext1:	
   366 ;; *************** function _read_packet *****************
   367 ;; Defined at:
   368 ;;		line 99 in file "../../Source file/RF_RX MPLABX/PR16RX.c"
   369 ;; Parameters:    Size  Location     Type
   370 ;;		None
   371 ;; Auto vars:     Size  Location     Type
   372 ;;  data            1    4[COMMON] unsigned char 
   373 ;;  checksum        1    3[COMMON] unsigned char 
   374 ;;  received_byt    1    0        unsigned char 
   375 ;; Return value:  Size  Location     Type
   376 ;;                  1    wreg      unsigned char 
   377 ;; Registers used:
   378 ;;		wreg, status,2, status,0, pclath, cstack
   379 ;; Tracked objects:
   380 ;;		On entry : 0/0
   381 ;;		On exit  : 0/0
   382 ;;		Unchanged: 0/0
   383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   384 ;;      Params:         0       0       0       0       0
   385 ;;      Locals:         2       0       0       0       0
   386 ;;      Temps:          1       0       0       0       0
   387 ;;      Totals:         3       0       0       0       0
   388 ;;Total ram usage:        3 bytes
   389 ;; Hardware stack levels used:    1
   390 ;; Hardware stack levels required when called:    1
   391 ;; This function calls:
   392 ;;		_uart_rec
   393 ;; This function is called by:
   394 ;;		_main
   395 ;; This function uses a non-reentrant model
   396 ;;
   397                           
   398                           
   399                           ;psect for function _read_packet
   400  078E                     _read_packet:	
   401  078E                     l558:	
   402                           ;PR16RX.c: 115: while (uart_rec() != 0xaa);
   403                           
   404                           ;incstack = 0
   405                           ; Regs used in _read_packet: [wreg+status,2+status,0+pclath+cstack]
   406                           ;PR16RX.c: 101: unsigned char received_byte;
   407                           ;PR16RX.c: 104: static unsigned char counter = 0;
   408                           ;PR16RX.c: 107: unsigned char data;
   409                           ;PR16RX.c: 108: unsigned char checksum;
   410                           ;PR16RX.c: 112: do {
   411                           
   412  078E  120A  118A  2763   	fcall	_uart_rec
      +       120A  118A         
   413  0793  3AAA               	xorlw	170
   414  0794  1D03               	skipz
   415  0795  2F8E               	goto	l558
   416                           
   417                           ;PR16RX.c: 118: data = uart_rec();
   418  0796  120A  118A  2763   	fcall	_uart_rec
      +       120A  118A         
   419  079B  00F2               	movwf	??_read_packet
   420  079C  0872               	movf	??_read_packet,w
   421  079D  00F4               	movwf	read_packet@data
   422                           
   423                           ;PR16RX.c: 121: checksum = uart_rec();
   424  079E  120A  118A  2763   	fcall	_uart_rec
      +       120A  118A         
   425  07A3  00F2               	movwf	??_read_packet
   426  07A4  0872               	movf	??_read_packet,w
   427  07A5  00F3               	movwf	read_packet@checksum
   428                           
   429                           ;PR16RX.c: 122: } while (checksum != (unsigned char)(0xaa + data));
   430  07A6  0874               	movf	read_packet@data,w
   431  07A7  3EAA               	addlw	170
   432  07A8  0673               	xorwf	read_packet@checksum,w
   433  07A9  1D03               	skipz
   434  07AA  2F8E               	goto	l558
   435                           
   436                           ;PR16RX.c: 125: return data;
   437  07AB  0874               	movf	read_packet@data,w
   438  07AC  0008               	return
   439  07AD                     __end_of_read_packet:	
   440                           
   441                           	psect	text2
   442  0763                     __ptext2:	
   443 ;; *************** function _uart_rec *****************
   444 ;; Defined at:
   445 ;;		line 89 in file "../../Source file/RF_RX MPLABX/PR16RX.c"
   446 ;; Parameters:    Size  Location     Type
   447 ;;		None
   448 ;; Auto vars:     Size  Location     Type
   449 ;;  rec_data        1    1[COMMON] unsigned char 
   450 ;; Return value:  Size  Location     Type
   451 ;;                  1    wreg      unsigned char 
   452 ;; Registers used:
   453 ;;		wreg
   454 ;; Tracked objects:
   455 ;;		On entry : 0/0
   456 ;;		On exit  : 0/0
   457 ;;		Unchanged: 0/0
   458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   459 ;;      Params:         0       0       0       0       0
   460 ;;      Locals:         1       0       0       0       0
   461 ;;      Temps:          1       0       0       0       0
   462 ;;      Totals:         2       0       0       0       0
   463 ;;Total ram usage:        2 bytes
   464 ;; Hardware stack levels used:    1
   465 ;; This function calls:
   466 ;;		Nothing
   467 ;; This function is called by:
   468 ;;		_read_packet
   469 ;; This function uses a non-reentrant model
   470 ;;
   471                           
   472                           
   473                           ;psect for function _uart_rec
   474  0763                     _uart_rec:	
   475  0763                     l36:	
   476                           ;PR16RX.c: 90: unsigned char rec_data;
   477                           ;PR16RX.c: 91: while(RCIF==0);
   478                           
   479                           ;incstack = 0
   480                           ; Regs used in _uart_rec: [wreg]
   481                           
   482  0763  1283               	bcf	3,5	;RP0=0, select bank0
   483  0764  1303               	bcf	3,6	;RP1=0, select bank0
   484  0765  1E8C               	btfss	12,5	;volatile
   485  0766  2F63               	goto	l36
   486                           
   487                           ;PR16RX.c: 92: rec_data = RCREG;
   488  0767  081A               	movf	26,w	;volatile
   489  0768  00F0               	movwf	??_uart_rec
   490  0769  0870               	movf	??_uart_rec,w
   491  076A  00F1               	movwf	uart_rec@rec_data
   492                           
   493                           ;PR16RX.c: 93: return rec_data;
   494  076B  0871               	movf	uart_rec@rec_data,w
   495  076C  0008               	return
   496  076D                     __end_of_uart_rec:	
   497  007E                     btemp	set	126	;btemp
   498  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80     18      34
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_read_packet
    _read_packet->_uart_rec

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0     229
                                              5 COMMON     4     4      0
                                              0 BANK0     18    18      0
                        _read_packet
 ---------------------------------------------------------------------------------
 (1) _read_packet                                          4     4      0      91
                                              2 COMMON     3     3      0
                           _uart_rec
 ---------------------------------------------------------------------------------
 (2) _uart_rec                                             2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _read_packet
     _uart_rec

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     12      22       5       42.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2E      12        0.0%
ABS                  0      0      2C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       2       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Thu Jun 18 12:10:09 2015

                      pc 0002              __CFG_CP$OFF 0000                       l36 0763  
                     l28 07E1                       fsr 0004                      l558 078E  
                    l592 07E2                      l596 07EA                      u100 07B5  
           __CFG_CPD$OFF 0000                      _RX9 00C6                      fsr0 0004  
                    indf 0000             __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000  
                   _BRGH 04C2                     _CREN 00C4                     _RCIF 0065  
                   _OERR 00C1                     _SPEN 00C7             __CFG_WRT$OFF 0000  
                   _main 07AD                     btemp 007E                     start 0000  
                  ?_main 0070            __CFG_WDTE$OFF 0000           __CFG_DEBUG$OFF 0000  
                  _RCREG 001A                    _SPBRG 0099                    _PORTB 0006  
                  _TRISB 0086            __CFG_PWRTE$ON 0000             ?_read_packet 0070  
         __CFG_BOREN$OFF 0000                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EF             __end_of_main 07EF  
                 ??_main 0075                   main@no 0030         __end_of_uart_rec 076D  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 076D  
   __size_of_read_packet 001F               __pmaintext 07AD                ?_uart_rec 0070  
                __ptext1 078E                  __ptext2 0763                  main@num 0031  
     read_packet@counter 0079     end_of_initialization 07FC         uart_rec@rec_data 0071  
             ??_uart_rec 0070      start_initialization 07EF               init_fetch0 077D  
            __pdataBANK0 0032              __pbssCOMMON 0079            __pcstackBANK0 0020  
          ??_read_packet 0072        __size_of_uart_rec 000A      __end_of_read_packet 07AD  
              main@_7seg 0020          read_packet@data 0074              _read_packet 078E  
          __size_of_main 0042      read_packet@checksum 0073                 _uart_rec 0763  
               main@F986 0032                 init_ram0 0781  
