

HI-TECH Software PIC LITE Macro Assembler V9.80 build 6738 
                                                                                               Wed Jun 20 23:00:37 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 6738
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 6738"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F876A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 14 "C:\Users\Phang\Desktop\9.80\PR 16\PR16RX.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 14 "C:\Users\Phang\Desktop\9.80\PR 16\PR16RX.c"
    45  2007  3F32               	dw 0x3F32 ;#
    46                           	FNCALL	_main,_read_packet
    47                           	FNCALL	_read_packet,_uart_rec
    48                           	FNROOT	_main
    49                           	global	main@F459
    50                           psect	idataBANK0,class=CODE,space=0,delta=2
    51                           global __pidataBANK0
    52  0751                     __pidataBANK0:
    53                           	file	"C:\Users\Phang\Desktop\9.80\PR 16\PR16RX.c"
    54                           	line	36
    55                           
    56                           ;initializer for main@F459
    57  0751  347F               	retlw	07Fh
    58  0752  340D               	retlw	0Dh
    59  0753  34B7               	retlw	0B7h
    60  0754  349F               	retlw	09Fh
    61  0755  34CD               	retlw	0CDh
    62  0756  34DB               	retlw	0DBh
    63  0757  34FB               	retlw	0FBh
    64  0758  340F               	retlw	0Fh
    65  0759  34FF               	retlw	0FFh
    66  075A  34DF               	retlw	0DFh
    67  075B  34EF               	retlw	0EFh
    68  075C  34F9               	retlw	0F9h
    69  075D  3473               	retlw	073h
    70  075E  34BD               	retlw	0BDh
    71  075F  34F3               	retlw	0F3h
    72  0760  34E3               	retlw	0E3h
    73                           	global	read_packet@counter
    74                           	global	_PORTB
    75  0006                     _PORTB	set	6
    76                           	global	_RCREG
    77  001A                     _RCREG	set	26
    78                           	global	_CREN
    79  00C4                     _CREN	set	196
    80                           	global	_OERR
    81  00C1                     _OERR	set	193
    82                           	global	_RCIF
    83  0065                     _RCIF	set	101
    84                           	global	_RX9
    85  00C6                     _RX9	set	198
    86                           	global	_SPEN
    87  00C7                     _SPEN	set	199
    88                           	global	_SPBRG
    89  0099                     _SPBRG	set	153
    90                           	global	_TRISB
    91  0086                     _TRISB	set	134
    92                           	global	_BRGH
    93  04C2                     _BRGH	set	1218
    94                           	file	"PR 16.as"
    95                           	line	#
    96                           psect cinit,class=CODE,delta=2
    97                           global start_initialization
    98  0772                     start_initialization:
    99                           
   100                           psect	bssCOMMON,class=COMMON,space=1
   101                           global __pbssCOMMON
   102  0079                     __pbssCOMMON:
   103  0079                     read_packet@counter:
   104  0079                            ds      1
   105                           
   106                           psect	dataBANK0,class=BANK0,space=1
   107                           global __pdataBANK0
   108  0032                     __pdataBANK0:
   109                           	file	"C:\Users\Phang\Desktop\9.80\PR 16\PR16RX.c"
   110  0032                     main@F459:
   111  0032                            ds      16
   112                           
   113                           ; Clear objects allocated to COMMON
   114                           psect cinit,class=CODE,delta=2
   115  0772  01F9               	clrf	((__pbssCOMMON)+0)&07Fh
   116                           global btemp
   117                           psect inittext,class=CODE,delta=2
   118                           global init_fetch,btemp
   119                           ;	Called with low address in FSR and high address in W
   120  0761                     init_fetch:
   121  0761  087E               	movf btemp,w
   122  0762  008A               	movwf pclath
   123  0763  087F               	movf btemp+1,w
   124  0764  0082               	movwf pc
   125                           global init_ram
   126                           ;Called with:
   127                           ;	high address of idata address in btemp 
   128                           ;	low address of idata address in btemp+1 
   129                           ;	low address of data in FSR
   130                           ;	high address + 1 of data in btemp-1
   131  0765                     init_ram:
   132  0765  2761  120A  118A   	fcall init_fetch
   133  0768  0080               	movwf indf,f
   134  0769  0A84               	incf fsr,f
   135  076A  0804               	movf fsr,w
   136  076B  067D               	xorwf btemp-1,w
   137  076C  1903               	btfsc status,2
   138  076D  3400               	retlw 0
   139  076E  0AFF               	incf btemp+1,f
   140  076F  1903               	btfsc status,2
   141  0770  0AFE               	incf btemp,f
   142  0771  2F65               	goto init_ram
   143                           ; Initialize objects allocated to BANK0
   144                           psect cinit,class=CODE,delta=2
   145                           global init_ram, __pidataBANK0
   146  0773  1383               	bcf	status, 7	;select IRP bank0
   147  0774  3042               	movlw low(__pdataBANK0+16)
   148  0775  00FD               	movwf btemp-1,f
   149  0776  3007               	movlw high(__pidataBANK0)
   150  0777  00FE               	movwf btemp,f
   151  0778  3051               	movlw low(__pidataBANK0)
   152  0779  00FF               	movwf btemp+1,f
   153  077A  3032               	movlw low(__pdataBANK0)
   154  077B  0084               	movwf fsr,f
   155  077C  120A  118A  2765   	fcall init_ram
              120A  118A         
   156                           psect cinit,class=CODE,delta=2
   157                           global end_of_initialization
   158                           
   159                           ;End of C runtime variable initialization code
   160                           
   161  0781                     end_of_initialization:
   162  0781  0183               clrf status
   163  0782  120A  118A  2FAD   ljmp _main	;jump to C main() function
   164                           psect	cstackCOMMON,class=COMMON,space=1
   165                           global __pcstackCOMMON
   166  0070                     __pcstackCOMMON:
   167                           	global	?_main
   168  0070                     ?_main:	; 0 bytes @ 0x0
   169                           	global	??_uart_rec
   170  0070                     ??_uart_rec:	; 0 bytes @ 0x0
   171                           	global	?_read_packet
   172  0070                     ?_read_packet:	; 1 bytes @ 0x0
   173                           	global	?_uart_rec
   174  0070                     ?_uart_rec:	; 1 bytes @ 0x0
   175  0070                     	ds	1
   176                           	global	uart_rec@rec_data
   177  0071                     uart_rec@rec_data:	; 1 bytes @ 0x1
   178  0071                     	ds	1
   179                           	global	??_read_packet
   180  0072                     ??_read_packet:	; 0 bytes @ 0x2
   181  0072                     	ds	1
   182                           	global	read_packet@checksum
   183  0073                     read_packet@checksum:	; 1 bytes @ 0x3
   184  0073                     	ds	1
   185                           	global	read_packet@data
   186  0074                     read_packet@data:	; 1 bytes @ 0x4
   187  0074                     	ds	1
   188                           	global	??_main
   189  0075                     ??_main:	; 0 bytes @ 0x5
   190  0075                     	ds	4
   191                           psect	cstackBANK0,class=BANK0,space=1
   192                           global __pcstackBANK0
   193  0020                     __pcstackBANK0:
   194                           	global	main@_7seg
   195  0020                     main@_7seg:	; 16 bytes @ 0x0
   196  0020                     	ds	16
   197                           	global	main@no
   198  0030                     main@no:	; 1 bytes @ 0x10
   199  0030                     	ds	1
   200                           	global	main@num
   201  0031                     main@num:	; 1 bytes @ 0x11
   202  0031                     	ds	1
   203 ;;Data sizes: Strings 0, constant 0, data 16, bss 1, persistent 0 stack 0
   204 ;;Auto spaces:   Size  Autos    Used
   205 ;; COMMON          14      9      10
   206 ;; BANK0           80     18      34
   207 ;; BANK1           80      0       0
   208 ;; BANK3           96      0       0
   209 ;; BANK2           96      0       0
   210                           
   211 ;;
   212 ;; Pointer list with targets:
   213                           
   214                           
   215                           
   216 ;;
   217 ;; Critical Paths under _main in COMMON
   218 ;;
   219 ;;   _main->_read_packet
   220 ;;   _read_packet->_uart_rec
   221 ;;
   222 ;; Critical Paths under _main in BANK0
   223 ;;
   224 ;;   None.
   225 ;;
   226 ;; Critical Paths under _main in BANK1
   227 ;;
   228 ;;   None.
   229 ;;
   230 ;; Critical Paths under _main in BANK3
   231 ;;
   232 ;;   None.
   233 ;;
   234 ;; Critical Paths under _main in BANK2
   235 ;;
   236 ;;   None.
   237                           
   238 ;;
   239 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   240 ;;
   241                           
   242 ;;
   243 ;;Call Graph Tables:
   244 ;;
   245 ;; ---------------------------------------------------------------------------------
   246 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   247 ;; ---------------------------------------------------------------------------------
   248 ;; (0) _main                                                22    22      0     229
   249 ;;                                              5 COMMON     4     4      0
   250 ;;                                              0 BANK0     18    18      0
   251 ;;                        _read_packet
   252 ;; ---------------------------------------------------------------------------------
   253 ;; (1) _read_packet                                          4     4      0      91
   254 ;;                                              2 COMMON     3     3      0
   255 ;;                           _uart_rec
   256 ;; ---------------------------------------------------------------------------------
   257 ;; (2) _uart_rec                                             2     2      0      23
   258 ;;                                              0 COMMON     2     2      0
   259 ;; ---------------------------------------------------------------------------------
   260 ;; Estimated maximum stack depth 2
   261 ;; ---------------------------------------------------------------------------------
   262                           
   263 ;; Call Graph Graphs:
   264                           
   265 ;; _main (ROOT)
   266 ;;   _read_packet
   267 ;;     _uart_rec
   268 ;;
   269                           
   270 ;; Address spaces:
   271                           
   272 ;;Name               Size   Autos  Total    Cost      Usage
   273 ;;BANK3               60      0       0       9        0.0%
   274 ;;BITBANK3            60      0       0       8        0.0%
   275 ;;SFR3                 0      0       0       4        0.0%
   276 ;;BITSFR3              0      0       0       4        0.0%
   277 ;;BANK2               60      0       0      11        0.0%
   278 ;;BITBANK2            60      0       0      10        0.0%
   279 ;;SFR2                 0      0       0       5        0.0%
   280 ;;BITSFR2              0      0       0       5        0.0%
   281 ;;SFR1                 0      0       0       2        0.0%
   282 ;;BITSFR1              0      0       0       2        0.0%
   283 ;;BANK1               50      0       0       7        0.0%
   284 ;;BITBANK1            50      0       0       6        0.0%
   285 ;;CODE                 0      0       0       0        0.0%
   286 ;;DATA                 0      0      2E      12        0.0%
   287 ;;ABS                  0      0      2C       3        0.0%
   288 ;;NULL                 0      0       0       0        0.0%
   289 ;;STACK                0      0       2       2        0.0%
   290 ;;BANK0               50     12      22       5       42.5%
   291 ;;BITBANK0            50      0       0       4        0.0%
   292 ;;SFR0                 0      0       0       1        0.0%
   293 ;;BITSFR0              0      0       0       1        0.0%
   294 ;;COMMON               E      9       A       1       71.4%
   295 ;;BITCOMMON            E      0       0       0        0.0%
   296 ;;EEDATA             100      0       0       0        0.0%
   297                           
   298                           	global	_main
   299                           psect	maintext,global,class=CODE,delta=2
   300                           global __pmaintext
   301  07AD                     __pmaintext:
   302                           
   303 ;; *************** function _main *****************
   304 ;; Defined at:
   305 ;;		line 32 in file "C:\Users\Phang\Desktop\9.80\PR 16\PR16RX.c"
   306 ;; Parameters:    Size  Location     Type
   307 ;;		None
   308 ;; Auto vars:     Size  Location     Type
   309 ;;  _7seg          16    0[BANK0 ] unsigned char [16]
   310 ;;  num             1   17[BANK0 ] unsigned char 
   311 ;;  no              1   16[BANK0 ] unsigned char 
   312 ;; Return value:  Size  Location     Type
   313 ;;		None               void
   314 ;; Registers used:
   315 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   316 ;; Tracked objects:
   317 ;;		On entry : 17F/0
   318 ;;		On exit  : 0/0
   319 ;;		Unchanged: 0/0
   320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   321 ;;      Params:         0       0       0       0       0
   322 ;;      Locals:         0      18       0       0       0
   323 ;;      Temps:          4       0       0       0       0
   324 ;;      Totals:         4      18       0       0       0
   325 ;;Total ram usage:       22 bytes
   326 ;; Hardware stack levels required when called:    2
   327 ;; This function calls:
   328 ;;		_read_packet
   329 ;; This function is called by:
   330 ;;		Startup code after reset
   331 ;; This function uses a non-reentrant model
   332 ;;
   333                           psect	maintext
   334                           	file	"C:\Users\Phang\Desktop\9.80\PR 16\PR16RX.c"
   335                           	line	32
   336                           	global	__size_of_main
   337  0053                     	__size_of_main	equ	__end_of_main-_main
   338                           	
   339  07AD                     _main:	
   340                           	opt	stack 6
   341                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   342                           	line	39
   343                           	
   344  07AD                     l1738:	
   345                           ;PR16RX.c: 34: unsigned char num,no;
   346                           ;PR16RX.c: 36: unsigned char _7seg[16]={0b01111111,0b00001101,0b10110111,0b10011111,
   347                           ;PR16RX.c: 37: 0b11001101,0b11011011,0b11111011,0b00001111,
   348                           ;PR16RX.c: 38: 0b11111111,0b11011111,0b11101111,0b11111001,
   349                           ;PR16RX.c: 39: 0b01110011,0b10111101,0b11110011,0b11100011};
   350  07AD  3020               	movlw	(main@_7seg)&0ffh
   351  07AE  0084               	movwf	fsr0
   352  07AF  3032               	movlw	low(main@F459)
   353  07B0  00F5               	movwf	(??_main+0)+0
   354  07B1  0804               	movf	fsr0,w
   355  07B2  00F6               	movwf	((??_main+0)+0+1)
   356  07B3  3010               	movlw	16
   357  07B4  00F7               	movwf	((??_main+0)+0+2)
   358  07B5                     u2230:
   359  07B5  0875               	movf	(??_main+0)+0,w
   360  07B6  0084               	movwf	fsr0
   361  07B7  1383               	bcf	status, 7	;select IRP bank0
   362                           	
   363  07B8  0800               	movf	indf,w
   364  07B9  00F8               	movwf	((??_main+0)+0+3)
   365  07BA  0AF5               	incf	(??_main+0)+0,f
   366  07BB  0876               	movf	((??_main+0)+0+1),w
   367  07BC  0084               	movwf	fsr0
   368                           	
   369  07BD  0878               	movf	((??_main+0)+0+3),w
   370  07BE  0080               	movwf	indf
   371  07BF  0AF6               	incf	((??_main+0)+0+1),f
   372  07C0  0BF7               	decfsz	((??_main+0)+0+2),f
   373  07C1  2FB5               	goto	u2230
   374                           	line	42
   375                           	
   376  07C2                     l1740:	
   377                           ;PR16RX.c: 42: TRISB = 0b00000000;
   378  07C2  1683               	bsf	status, 5	;RP0=1, select bank1
   379  07C3  1303               	bcf	status, 6	;RP1=0, select bank1
   380  07C4  0186               	clrf	(134)^080h	;volatile
   381                           	line	45
   382                           	
   383  07C5                     l1742:	
   384                           ;PR16RX.c: 45: BRGH = 0;
   385  07C5  1118               	bcf	(1218/8)^080h,(1218)&7
   386                           	line	46
   387                           	
   388  07C6                     l1744:	
   389                           ;PR16RX.c: 46: SPBRG = 255;
   390  07C6  30FF               	movlw	(0FFh)
   391  07C7  0099               	movwf	(153)^080h	;volatile
   392                           	line	47
   393                           	
   394  07C8                     l1746:	
   395                           ;PR16RX.c: 47: SPEN = 1;
   396  07C8  1283               	bcf	status, 5	;RP0=0, select bank0
   397  07C9  1303               	bcf	status, 6	;RP1=0, select bank0
   398  07CA  1798               	bsf	(199/8),(199)&7
   399                           	line	48
   400                           	
   401  07CB                     l1748:	
   402                           ;PR16RX.c: 48: RX9 = 0;
   403  07CB  1318               	bcf	(198/8),(198)&7
   404                           	line	49
   405                           	
   406  07CC                     l1750:	
   407                           ;PR16RX.c: 49: CREN = 1;
   408  07CC  1618               	bsf	(196/8),(196)&7
   409                           	line	51
   410                           	
   411  07CD                     l1752:	
   412                           ;PR16RX.c: 51: num=0;
   413  07CD  1003               	clrc
   414  07CE  3000               	movlw	0
   415  07CF  1803               	btfsc	status,0
   416  07D0  3001               	movlw	1
   417  07D1  00B1               	movwf	(main@num)
   418                           	line	52
   419                           	
   420  07D2                     l1754:	
   421                           ;PR16RX.c: 52: PORTB=_7seg[num];
   422  07D2  0831               	movf	(main@num),w
   423  07D3  3E20               	addlw	main@_7seg&0ffh
   424  07D4  0084               	movwf	fsr0
   425  07D5  0800               	movf	indf,w
   426  07D6  0086               	movwf	(6)	;volatile
   427  07D7  2FD8               	goto	l1756
   428                           	line	54
   429                           ;PR16RX.c: 54: while(1)
   430                           	
   431  07D8                     l499:	
   432                           	line	56
   433                           	
   434  07D8                     l1756:	
   435                           ;PR16RX.c: 55: {
   436                           ;PR16RX.c: 56: CREN=1;
   437  07D8  1618               	bsf	(196/8),(196)&7
   438                           	line	57
   439                           	
   440  07D9                     l1758:	
   441                           ;PR16RX.c: 57: if(OERR==0) no=read_packet();
   442  07D9  1898               	btfsc	(193/8),(193)&7
   443  07DA  2FDC               	goto	u2241
   444  07DB  2FDD               	goto	u2240
   445  07DC                     u2241:
   446  07DC  2FE8               	goto	l500
   447  07DD                     u2240:
   448                           	
   449  07DD                     l1760:	
   450  07DD  120A  118A  2785   	fcall	_read_packet
              120A  118A         
   451  07E2  00F5               	movwf	(??_main+0)+0
   452  07E3  0875               	movf	(??_main+0)+0,w
   453  07E4  1283               	bcf	status, 5	;RP0=0, select bank0
   454  07E5  1303               	bcf	status, 6	;RP1=0, select bank0
   455  07E6  00B0               	movwf	(main@no)
   456  07E7  2FEA               	goto	l1762
   457                           	line	58
   458                           	
   459  07E8                     l500:	
   460                           ;PR16RX.c: 58: else CREN=0;
   461  07E8  1218               	bcf	(196/8),(196)&7
   462  07E9  2FEA               	goto	l1762
   463                           	
   464  07EA                     l501:	
   465                           	line	60
   466                           	
   467  07EA                     l1762:	
   468                           ;PR16RX.c: 60: if(no <= 0x0f) num=no;
   469  07EA  3010               	movlw	(010h)
   470  07EB  0230               	subwf	(main@no),w
   471  07EC  1803               	skipnc
   472  07ED  2FEF               	goto	u2251
   473  07EE  2FF0               	goto	u2250
   474  07EF                     u2251:
   475  07EF  2FF5               	goto	l1766
   476  07F0                     u2250:
   477                           	
   478  07F0                     l1764:	
   479  07F0  0830               	movf	(main@no),w
   480  07F1  00F5               	movwf	(??_main+0)+0
   481  07F2  0875               	movf	(??_main+0)+0,w
   482  07F3  00B1               	movwf	(main@num)
   483  07F4  2FF5               	goto	l1766
   484                           	
   485  07F5                     l502:	
   486                           	line	62
   487                           	
   488  07F5                     l1766:	
   489                           ;PR16RX.c: 62: PORTB=_7seg[num];
   490  07F5  0831               	movf	(main@num),w
   491  07F6  3E20               	addlw	main@_7seg&0ffh
   492  07F7  0084               	movwf	fsr0
   493  07F8  1383               	bcf	status, 7	;select IRP bank0
   494  07F9  0800               	movf	indf,w
   495  07FA  0086               	movwf	(6)	;volatile
   496  07FB  2FD8               	goto	l1756
   497                           	line	63
   498                           	
   499  07FC                     l503:	
   500                           	line	54
   501  07FC  2FD8               	goto	l1756
   502                           	
   503  07FD                     l504:	
   504                           	line	64
   505                           	
   506  07FD                     l505:	
   507                           	global	start
   508  07FD  120A  118A  2800   	ljmp	start
   509                           	opt stack 0
   510                           GLOBAL	__end_of_main
   511  0800                     	__end_of_main:
   512 ;; =============== function _main ends ============
   513                           
   514                           	signat	_main,88
   515                           	global	_read_packet
   516                           psect	text109,local,class=CODE,delta=2
   517                           global __ptext109
   518  0785                     __ptext109:
   519                           
   520 ;; *************** function _read_packet *****************
   521 ;; Defined at:
   522 ;;		line 80 in file "C:\Users\Phang\Desktop\9.80\PR 16\PR16RX.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;		None
   525 ;; Auto vars:     Size  Location     Type
   526 ;;  data            1    4[COMMON] unsigned char 
   527 ;;  checksum        1    3[COMMON] unsigned char 
   528 ;;  received_byt    1    0        unsigned char 
   529 ;; Return value:  Size  Location     Type
   530 ;;                  1    wreg      unsigned char 
   531 ;; Registers used:
   532 ;;		wreg, status,2, status,0, pclath, cstack
   533 ;; Tracked objects:
   534 ;;		On entry : 0/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   538 ;;      Params:         0       0       0       0       0
   539 ;;      Locals:         2       0       0       0       0
   540 ;;      Temps:          1       0       0       0       0
   541 ;;      Totals:         3       0       0       0       0
   542 ;;Total ram usage:        3 bytes
   543 ;; Hardware stack levels used:    1
   544 ;; Hardware stack levels required when called:    1
   545 ;; This function calls:
   546 ;;		_uart_rec
   547 ;; This function is called by:
   548 ;;		_main
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           psect	text109
   552                           	file	"C:\Users\Phang\Desktop\9.80\PR 16\PR16RX.c"
   553                           	line	80
   554                           	global	__size_of_read_packet
   555  0028                     	__size_of_read_packet	equ	__end_of_read_packet-_read_packet
   556                           	
   557  0785                     _read_packet:	
   558                           	opt	stack 6
   559                           ; Regs used in _read_packet: [wreg+status,2+status,0+pclath+cstack]
   560                           	line	93
   561                           ;PR16RX.c: 82: unsigned char received_byte;
   562                           ;PR16RX.c: 85: static unsigned char counter = 0;
   563                           ;PR16RX.c: 88: unsigned char data;
   564                           ;PR16RX.c: 89: unsigned char checksum;
   565                           ;PR16RX.c: 93: do {
   566                           	
   567  0785                     l516:	
   568                           	line	96
   569                           ;PR16RX.c: 96: while (uart_rec() != 0xaa);
   570  0785  2F87               	goto	l1728
   571                           	
   572  0786                     l518:	
   573  0786  2F87               	goto	l1728
   574                           	
   575  0787                     l517:	
   576                           	
   577  0787                     l1728:	
   578  0787  120A  118A  2742   	fcall	_uart_rec
              120A  118A         
   579  078C  3AAA               	xorlw	0AAh
   580  078D  1D03               	skipz
   581  078E  2F90               	goto	u2211
   582  078F  2F91               	goto	u2210
   583  0790                     u2211:
   584  0790  2F87               	goto	l1728
   585  0791                     u2210:
   586  0791  2F92               	goto	l1730
   587                           	
   588  0792                     l519:	
   589                           	line	99
   590                           	
   591  0792                     l1730:	
   592                           ;PR16RX.c: 99: data = uart_rec();
   593  0792  120A  118A  2742   	fcall	_uart_rec
              120A  118A         
   594  0797  00F2               	movwf	(??_read_packet+0)+0
   595  0798  0872               	movf	(??_read_packet+0)+0,w
   596  0799  00F4               	movwf	(read_packet@data)
   597                           	line	102
   598                           ;PR16RX.c: 102: checksum = uart_rec();
   599  079A  120A  118A  2742   	fcall	_uart_rec
              120A  118A         
   600  079F  00F2               	movwf	(??_read_packet+0)+0
   601  07A0  0872               	movf	(??_read_packet+0)+0,w
   602  07A1  00F3               	movwf	(read_packet@checksum)
   603                           	line	103
   604                           	
   605  07A2                     l1732:	
   606                           ;PR16RX.c: 103: } while (checksum != (unsigned char)(0xaa + data));
   607  07A2  0874               	movf	(read_packet@data),w
   608  07A3  3EAA               	addlw	0AAh
   609  07A4  0673               	xorwf	(read_packet@checksum),w
   610  07A5  1D03               	skipz
   611  07A6  2FA8               	goto	u2221
   612  07A7  2FA9               	goto	u2220
   613  07A8                     u2221:
   614  07A8  2F85               	goto	l516
   615  07A9                     u2220:
   616  07A9  2FAA               	goto	l1734
   617                           	
   618  07AA                     l520:	
   619                           	line	106
   620                           	
   621  07AA                     l1734:	
   622                           ;PR16RX.c: 106: return data;
   623  07AA  0874               	movf	(read_packet@data),w
   624  07AB  2FAC               	goto	l521
   625                           	
   626  07AC                     l1736:	
   627                           	line	107
   628                           	
   629  07AC                     l521:	
   630  07AC  0008               	return
   631                           	opt stack 0
   632                           GLOBAL	__end_of_read_packet
   633  07AD                     	__end_of_read_packet:
   634 ;; =============== function _read_packet ends ============
   635                           
   636                           	signat	_read_packet,89
   637                           	global	_uart_rec
   638                           psect	text110,local,class=CODE,delta=2
   639                           global __ptext110
   640  0742                     __ptext110:
   641                           
   642 ;; *************** function _uart_rec *****************
   643 ;; Defined at:
   644 ;;		line 70 in file "C:\Users\Phang\Desktop\9.80\PR 16\PR16RX.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;		None
   647 ;; Auto vars:     Size  Location     Type
   648 ;;  rec_data        1    1[COMMON] unsigned char 
   649 ;; Return value:  Size  Location     Type
   650 ;;                  1    wreg      unsigned char 
   651 ;; Registers used:
   652 ;;		wreg
   653 ;; Tracked objects:
   654 ;;		On entry : 0/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   658 ;;      Params:         0       0       0       0       0
   659 ;;      Locals:         1       0       0       0       0
   660 ;;      Temps:          1       0       0       0       0
   661 ;;      Totals:         2       0       0       0       0
   662 ;;Total ram usage:        2 bytes
   663 ;; Hardware stack levels used:    1
   664 ;; This function calls:
   665 ;;		Nothing
   666 ;; This function is called by:
   667 ;;		_read_packet
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           psect	text110
   671                           	file	"C:\Users\Phang\Desktop\9.80\PR 16\PR16RX.c"
   672                           	line	70
   673                           	global	__size_of_uart_rec
   674  000F                     	__size_of_uart_rec	equ	__end_of_uart_rec-_uart_rec
   675                           	
   676  0742                     _uart_rec:	
   677                           	opt	stack 6
   678                           ; Regs used in _uart_rec: [wreg]
   679                           	line	72
   680                           	
   681  0742                     l1722:	
   682                           ;PR16RX.c: 71: unsigned char rec_data;
   683                           ;PR16RX.c: 72: while(RCIF==0);
   684  0742  2F43               	goto	l508
   685                           	
   686  0743                     l509:	
   687                           	
   688  0743                     l508:	
   689  0743  1283               	bcf	status, 5	;RP0=0, select bank0
   690  0744  1303               	bcf	status, 6	;RP1=0, select bank0
   691  0745  1E8C               	btfss	(101/8),(101)&7
   692  0746  2F48               	goto	u2201
   693  0747  2F49               	goto	u2200
   694  0748                     u2201:
   695  0748  2F43               	goto	l508
   696  0749                     u2200:
   697  0749  2F4A               	goto	l1724
   698                           	
   699  074A                     l510:	
   700                           	line	73
   701                           	
   702  074A                     l1724:	
   703                           ;PR16RX.c: 73: rec_data = RCREG;
   704  074A  081A               	movf	(26),w	;volatile
   705  074B  00F0               	movwf	(??_uart_rec+0)+0
   706  074C  0870               	movf	(??_uart_rec+0)+0,w
   707  074D  00F1               	movwf	(uart_rec@rec_data)
   708                           	line	74
   709                           ;PR16RX.c: 74: return rec_data;
   710  074E  0871               	movf	(uart_rec@rec_data),w
   711  074F  2F50               	goto	l511
   712                           	
   713  0750                     l1726:	
   714                           	line	75
   715                           	
   716  0750                     l511:	
   717  0750  0008               	return
   718                           	opt stack 0
   719                           GLOBAL	__end_of_uart_rec
   720  0751                     	__end_of_uart_rec:
   721 ;; =============== function _uart_rec ends ============
   722                           
   723                           	signat	_uart_rec,89
   724                           psect	text111,local,class=CODE,delta=2
   725                           global __ptext111
   726  0000                     __ptext111:
   727                           	global	btemp
   728  007E                     	btemp set 07Eh
   729                           
   730                           	DABS	1,126,2	;btemp
   731                           	global	wtemp0
   732  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.80 build 6738 
Symbol Table                                                                                   Wed Jun 20 23:00:37 2012

                   pc 0002                    fsr 0004                   l500 07E8                   l501 07EA  
                 l510 074A                   l502 07F5                   l511 0750                   l503 07FC  
                 l520 07AA                   l504 07FD                   l521 07AC                   l505 07FD  
                 l508 0743                   l516 0785                   l509 0743                   l517 0787  
                 l518 0786                   l519 0792                   l499 07D8                   _RX9 00C6  
                 fsr0 0004                   indf 0000                  l1722 0742                  l1730 0792  
                l1724 074A                  l1732 07A2                  l1740 07C2                  l1726 0750  
                l1734 07AA                  l1750 07CC                  l1742 07C5                  l1736 07AC  
                l1728 0787                  l1760 07DD                  l1752 07CD                  l1744 07C6  
                l1762 07EA                  l1754 07D2                  l1746 07C8                  l1738 07AD  
                l1764 07F0                  l1756 07D8                  l1748 07CB                  l1766 07F5  
                l1758 07D9                  _BRGH 04C2                  _CREN 00C4                  u2200 0749  
                u2201 0748                  u2210 0791                  u2211 0790                  u2220 07A9  
                u2221 07A8                  u2230 07B5                  u2240 07DD                  u2241 07DC  
                u2250 07F0                  u2251 07EF                  _RCIF 0065                  _OERR 00C1  
                _SPEN 00C7                  _main 07AD                  btemp 007E                  start 0000  
               ?_main 0070                 _RCREG 001A                 _SPBRG 0099                 _PORTB 0006  
               _TRISB 0086          ?_read_packet 0070                 pclath 000A                 status 0003  
               wtemp0 007E          __end_of_main 0800                ??_main 0075                main@no 0030  
    __end_of_uart_rec 0751        __pcstackCOMMON 0070          __pidataBANK0 0751  __size_of_read_packet 0028  
          __pmaintext 07AD             ?_uart_rec 0070               main@num 0031    read_packet@counter 0079  
end_of_initialization 0781      uart_rec@rec_data 0071               init_ram 0765            ??_uart_rec 0070  
 start_initialization 0772           __pdataBANK0 0032           __pbssCOMMON 0079         __pcstackBANK0 0020  
       ??_read_packet 0072             __ptext110 0742             __ptext111 0000             __ptext109 0785  
   __size_of_uart_rec 000F   __end_of_read_packet 07AD             main@_7seg 0020       read_packet@data 0074  
           init_fetch 0761           _read_packet 0785         __size_of_main 0053   read_packet@checksum 0073  
            main@F459 0032              _uart_rec 0742  
